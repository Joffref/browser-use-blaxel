# Load the perl module for environment variable access
load_module /usr/lib/nginx/modules/ngx_http_perl_module.so;

user root;
worker_processes auto;
pid /var/run/nginx.pid;

# Pass environment variables to nginx
env BL_NAME;
env BL_WORKSPACE;
env BL_TYPE;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;

    # Custom log format with more details
    log_format detailed '$remote_addr - $remote_user [$time_local] "$request" '
                        '$status $body_bytes_sent "$http_referer" '
                        '"$http_user_agent" "$http_x_forwarded_for" '
                        'rt=$request_time uct="$upstream_connect_time" '
                        'uht="$upstream_header_time" urt="$upstream_response_time"';

    # Logging with more detail
    access_log /var/log/nginx/access.log detailed;
    access_log /dev/stdout detailed;
    error_log /var/log/nginx/error.log debug;

    # WebSocket connection upgrade map
    map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
    }

    # Extract the first forwarded host, fallback to $http_host if no X-Forwarded-Host
    map $http_x_forwarded_host $forwarded_host {
        default $http_host;
        "~^([^,\s]+)" $1;
    }

    # Check if host contains preview.bl.run (skip rewriting for preview)
    map $forwarded_host $is_preview {
        default 0;
        "~preview\.bl\.run" 1;
    }

    # Check if request is from blaxel.ai or beamlit.net domains
    map $forwarded_host $is_blaxel_domain {
        default 0;
        "~(blaxel\.ai|beamlit\.net)" 1;
    }

    # Initialize perl module to access environment variables
    perl_set $bl_workspace 'sub { return $ENV{"BL_WORKSPACE"} || ""; }';
    perl_set $bl_type 'sub { return $ENV{"BL_TYPE"} || ""; }';
    perl_set $bl_name 'sub { return $ENV{"BL_NAME"} || ""; }';

    # Construct Blaxel endpoint from environment variables
    perl_set $blaxel_endpoint 'sub {
        my $workspace = $ENV{"BL_WORKSPACE"} || "";
        my $type = $ENV{"BL_TYPE"} || "";
        my $name = $ENV{"BL_NAME"} || "";

        # Pluralize the type value
        if ($type) {
            # Basic pluralization rules
            if ($type =~ /(s|x|z|ch|sh)$/) {
                $type .= "es";
            } elsif ($type =~ /[^aeiou]y$/) {
                $type =~ s/y$/ies/;
            } elsif ($type !~ /s$/) {
                $type .= "s";
            }
        }

        return ($workspace && $type && $name) ? "run.blaxel.ai/$workspace/$type/$name" : "";
    }';

    # Check if we have valid Blaxel environment
    perl_set $has_blaxel_env 'sub {
        return ($ENV{"BL_WORKSPACE"} && $ENV{"BL_TYPE"} && $ENV{"BL_NAME"}) ? "1" : "0";
    }';

    # Choose the appropriate endpoint based on environment presence
    map $has_blaxel_env $websocket_endpoint {
        default $forwarded_host;
        1 $blaxel_endpoint;
    }

    # Create complete WebSocket URLs with appropriate protocols - rewrite to preview.bl.run when applicable
    map "$has_blaxel_env:$is_preview" $ws_url {
        default "ws://$forwarded_host";
        "1:0" "wss://$blaxel_endpoint";
        "1:1" "wss://$forwarded_host";
        "0:1" "wss://$forwarded_host";
    }

    map "$has_blaxel_env:$is_preview" $wss_url {
        default "wss://$forwarded_host";
        "1:0" "wss://$blaxel_endpoint";
        "1:1" "wss://$forwarded_host";
        "0:1" "wss://$forwarded_host";
    }

    map "$has_blaxel_env:$is_preview" $http_url {
        default "http://$forwarded_host";
        "1:0" "https://$blaxel_endpoint";
        "1:1" "https://$forwarded_host";
        "0:1" "https://$forwarded_host";
    }

    map "$has_blaxel_env:$is_preview" $https_url {
        default "https://$forwarded_host";
        "1:0" "https://$blaxel_endpoint";
        "1:1" "https://$forwarded_host";
        "0:1" "https://$forwarded_host";
    }

    # Websocket endpoint for devtoolsFrontendUrl - rewrite to preview.bl.run when applicable
    map "$has_blaxel_env:$is_preview" $websocket_endpoint_final {
        default "$websocket_endpoint";
        "1:1" "$forwarded_host";
        "0:1" "$forwarded_host";
    }

    server {
        listen 8080;
        server_name _;

        # Handle WebSocket connections to DevTools
        location ~* ^/devtools/page/ {
            proxy_pass http://127.0.0.1:9222;

            # WebSocket specific headers
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;

            # Required headers for Chrome DevTools
            proxy_set_header Host localhost:9222;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Disable buffering for WebSocket
            proxy_buffering off;
            proxy_cache off;

            # Timeout settings for WebSocket
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;

            # WebSocket specific timeouts
            proxy_socket_keepalive on;
        }

        # Handle all other DevTools API requests with URL rewriting
        location / {
            proxy_pass http://127.0.0.1:9222;

            # Override the Host header to localhost so Chrome accepts it
            proxy_set_header Host localhost:9222;

            # Preserve the original headers for debugging
            proxy_set_header X-Original-Host $forwarded_host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Port 8080;

            # WebSocket support for DevTools Protocol (fallback)
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;

            # Disable buffering for real-time communication
            proxy_buffering off;
            proxy_cache off;

            # Timeout settings
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;

            # URL rewriting for WebSocket URLs in JSON responses
            # This replaces localhost:9222 with the actual host:port that clients use
            sub_filter_once off;
            sub_filter_types application/json;

            # Replace WebSocket URLs - force wss:// when Blaxel headers are present
            sub_filter 'ws://localhost:9222' '$ws_url';
            sub_filter 'wss://localhost:9222' '$wss_url';

            # Replace HTTP URLs - force https:// when Blaxel headers are present
            sub_filter 'http://localhost:9222' '$http_url';
            sub_filter 'https://localhost:9222' '$https_url';

            # Fix devtoolsFrontendUrl which contains localhost:9222 without protocol
            sub_filter 'localhost:9222' '$websocket_endpoint_final';
        }
    }
}